{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/EP2-what-is-infosec/","result":{"data":{"markdownRemark":{"id":"27428dce-97d2-5a04-8d85-742e35501d4a","html":"<h2 id=\"podcast-連結\" style=\"position:relative;\"><a href=\"#podcast-%E9%80%A3%E7%B5%90\" aria-label=\"podcast 連結 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Podcast 連結</h2>\n<ul>\n<li><a href=\"https://podcasts.apple.com/us/podcast/%E8%B3%87%E5%AE%89%E8%A7%A3%E5%A3%93%E7%B8%AE/id1513276667#episodeGuid=ckalq9qvuuzgb0873237864px\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Apple Podcast</a></li>\n<li><a href=\"https://open.spotify.com/episode/3Z230lGFQs5USio2v6uG83?si=yyTqUo3WSBCnnNhy_XpzfA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spotify Podcast</a></li>\n<li><a href=\"https://open.firstory.me/story/ckalq9qvuuzgb0873237864px\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Firstory Podcast</a></li>\n</ul>\n<hr>\n<h2 id=\"本集內容大綱\" style=\"position:relative;\"><a href=\"#%E6%9C%AC%E9%9B%86%E5%85%A7%E5%AE%B9%E5%A4%A7%E7%B6%B1\" aria-label=\"本集內容大綱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>本集內容大綱</h2>\n<p><strong>資安三元素</strong></p>\n<ul>\n<li>機密性</li>\n<li>完整性</li>\n<li>可用性</li>\n</ul>\n<h3 id=\"機密性\" style=\"position:relative;\"><a href=\"#%E6%A9%9F%E5%AF%86%E6%80%A7\" aria-label=\"機密性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>機密性</h3>\n<p><strong>概念：</strong> 不想被知道的東西，不會被知道，確保資料不被未經許可的人存取或修改</p>\n<p><strong>常用的工具：</strong> 加密，就像是把東西鎖在保險箱裡</p>\n<p><strong>加密的安全程度</strong> 決定因素</p>\n<ul>\n<li>\n<p>加密演算法 (保險箱本身的設計)</p>\n<ul>\n<li>較差的保險箱可能可以直接用鐵鎚敲破，而較好的不僅不怕鐵錘，可能還可以防水防火</li>\n<li>保險箱就像加密時使用的加密演算法，這個演算法有好壞的差異，也有不同的使用時機</li>\n</ul>\n</li>\n<li>\n<p>密碼 (鑰匙和鎖的複雜程度)</p>\n<ul>\n<li>越複雜的鎖越難開，越難開的鎖也就越安全</li>\n<li>密碼如果是 0000 或 1234 的話很容易被猜出來，反之，越長越複雜的密碼往往越難被猜中</li>\n</ul>\n</li>\n</ul>\n<p><strong>好的加密方法：</strong> 好的加密演算法 + 足夠安全的密碼</p>\n<ul>\n<li>高級的保險箱 + 簡單的密碼 → 快猜中，不管保險箱多高級都沒有用</li>\n<li>安全的密碼 + 防護不好的保險箱 → 不需要花費力氣去猜密碼，直接把保險箱砸爛就好了</li>\n<li>好的加密演算法 和 足夠安全的密碼 是相輔相成缺一不可的</li>\n</ul>\n<h3 id=\"完整性\" style=\"position:relative;\"><a href=\"#%E5%AE%8C%E6%95%B4%E6%80%A7\" aria-label=\"完整性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>完整性</h3>\n<p><strong>概念：</strong> 確保想保護的資訊可以正確且完整的被處理及保存</p>\n<p><strong>以拼圖為舉例</strong></p>\n<ul>\n<li>拼好的拼圖 → 想保護的訊息</li>\n<li>把拼圖打散弄亂 → 資安的保護措施</li>\n</ul>\n<p><strong>需要注意的點：</strong> 有沒有不小心把其中幾片拼圖弄不見、有沒有別的拼圖混入了我們的拼圖中</p>\n<p><strong>常用的工具：</strong> 數位簽章</p>\n<ul>\n<li>\n<p>就像現實生活中簽名的動作</p>\n<ul>\n<li>防止對方擅自修改合約內容</li>\n<li>雙方的簽名證明持有合約的正確性</li>\n</ul>\n</li>\n<li>\n<p>由雜湊函數及公開金鑰加密法組成</p>\n<ul>\n<li>雜湊函數：確認資料本身的完整性，並確保資料沒有被他人修改過</li>\n<li>公開金鑰加密法：確認資料來源的正確性</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"可用性\" style=\"position:relative;\"><a href=\"#%E5%8F%AF%E7%94%A8%E6%80%A7\" aria-label=\"可用性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>可用性</h3>\n<p><strong>概念：</strong> 確保公司 / 軟體可以正常運作</p>\n<ul>\n<li>資安與可用性是兩個互相衝突的東西</li>\n<li>實務面向的審視，不能為了資安放棄公司的正常營運</li>\n</ul>\n<h4 id=\"常見的駭客攻擊手法\" style=\"position:relative;\"><a href=\"#%E5%B8%B8%E8%A6%8B%E7%9A%84%E9%A7%AD%E5%AE%A2%E6%94%BB%E6%93%8A%E6%89%8B%E6%B3%95\" aria-label=\"常見的駭客攻擊手法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>常見的駭客攻擊手法</h4>\n<p>阻斷式攻擊 Denial of Service (DoS) : 駭客刻意讓網站癱瘓不能正常運作</p>\n<ul>\n<li>工具：駭客自己所擁有的電腦</li>\n<li>就像過年時的高速公路，同時有太多用路人要使用高速公路而導致大塞車</li>\n</ul>\n<p>分散式阻斷攻擊 Distributed Denial of Service (DDoS) ：更進階的阻斷式攻擊</p>\n<ul>\n<li>工具：被駭客控制的多台電腦同時發動攻擊，可能是你我身邊被駭的筆電主機或智慧家電</li>\n<li>就像幫派大哥在鬧事時帶了很多小弟</li>\n<li>難處：不僅僅要抓住大哥，還要分辨在現場的人到底是鬧事的小弟還是只是剛好路過的路人甲</li>\n</ul>\n<p>解決辦法</p>\n<ul>\n<li>加寬高速公路 (成本效益的考量，連假只佔了一年中的幾天，為了這幾天加寬高速公路值得嗎?)</li>\n<li>分析所有訪客，找出行為不正常的訪客 (較實務的作法，需要大數據的幫忙)</li>\n</ul>\n<p><strong>常見的天然災害</strong></p>\n<p>火災、水災、地震、颱風，直接對設備造成物理性傷害</p>\n<p>為什麼要討論到天然災害? <br>\n現在的生活已經離不開電腦跟網路，確保網路跟電腦能維持基本的運作已經變成必須</p>\n<ul>\n<li>實例：美國的資訊安全與基礎設施安全管理局 Cybersecurity &#x26; Infrastructure Security Agency 在 COVID-19 期間明定哪些行業屬於必要 / 非必要，美國已經將資訊安全與基礎設施相提並論</li>\n</ul>\n<p>應對方式：企業永續計畫 Business Continuity Plan (制定詳細的防範措施)</p>\n<ul>\n<li>如何備份? 備份在哪? 多久備份一次?</li>\n<li>意外事件發生時該如何應對? 該通知誰?</li>\n<li>如何把影響降到最低? 如何在最短的時間內恢復企業的營運?</li>\n</ul>\n<h3 id=\"常見的資安工作職位\" style=\"position:relative;\"><a href=\"#%E5%B8%B8%E8%A6%8B%E7%9A%84%E8%B3%87%E5%AE%89%E5%B7%A5%E4%BD%9C%E8%81%B7%E4%BD%8D\" aria-label=\"常見的資安工作職位 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>常見的資安工作職位</h3>\n<ul>\n<li>\n<p>資安工程師</p>\n<ul>\n<li>增加應用程式的安全性、修補漏洞</li>\n<li>專門開發資安用的軟體，像是防毒軟體</li>\n</ul>\n</li>\n<li>\n<p>資安研究員</p>\n<ul>\n<li>研發新的演算法</li>\n<li>分析現有演算法，尋找缺失或改進演算法</li>\n<li>幫忙審視公司/軟體的安全性</li>\n</ul>\n</li>\n<li>\n<p>資安架構師從系統架構的方面上來確保安全性</p>\n</li>\n<li>\n<p>資安分析師</p>\n<ul>\n<li>監控系統已在駭客入侵或事件發生時能立即做出反應</li>\n</ul>\n</li>\n<li>\n<p>資安長</p>\n<ul>\n<li>負責做決定以及監督</li>\n</ul>\n</li>\n<li>\n<p>網路警察</p>\n<ul>\n<li>專門處理網路事件或資安事件的警察</li>\n</ul>\n</li>\n<li>\n<p>資安鑑識工程師</p>\n<ul>\n<li>在資安事件中負責採證</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"雜湊函數-hash-function\" style=\"position:relative;\"><a href=\"#%E9%9B%9C%E6%B9%8A%E5%87%BD%E6%95%B8-hash-function\" aria-label=\"雜湊函數 hash function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>雜湊函數 Hash Function</h2>\n<p>有些地方會翻譯為哈希函數，雜湊函數是一種演算法類型，當我們輸入一個值給雜湊函數時，他會回傳給我們一個雜湊值(hash, hash value)，一個理想的雜湊函數會有以下特性：</p>\n<h4 id=\"雜湊值長度固定\" style=\"position:relative;\"><a href=\"#%E9%9B%9C%E6%B9%8A%E5%80%BC%E9%95%B7%E5%BA%A6%E5%9B%BA%E5%AE%9A\" aria-label=\"雜湊值長度固定 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>雜湊值長度固定</h4>\n<p>從雜湊函數取得的雜湊值不會因輸入值的長短而有所改變。不管輸入的是一個字、一句話，或是五百字心得，當輸入不同的值給雜湊函數，從函數取得的雜湊值長度應該是固定的。雜湊值的長度則是由雜湊函數所決定，不同的雜湊函數可能會有不同的雜湊值長度。</p>\n<h4 id=\"單向函式-one-way-function\" style=\"position:relative;\"><a href=\"#%E5%96%AE%E5%90%91%E5%87%BD%E5%BC%8F-one-way-function\" aria-label=\"單向函式 one way function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>單向函式 One Way Function</h4>\n<p>在講解單向函式以前我先稍微解釋雙向函式。以一個簡單的算式 (A + 2) x 5 = B 來說，當我們輸入 A 值時會得到 B，且我們可以由 B 來回推出 A 是什麼，這就是雙向函式。單向函式則相反，當我們輸入 A 值時可以從函式得到 B，但我們無法從 B 回推出 A。 雜湊函數就是屬於一種單向函式，我們可以從輸入值給雜湊函數來得到雜湊值，但我們無法從雜湊值回推出輸入的值為何。</p>\n<h4 id=\"碰撞抵抗性-collision-resistant\" style=\"position:relative;\"><a href=\"#%E7%A2%B0%E6%92%9E%E6%8A%B5%E6%8A%97%E6%80%A7-collision-resistant\" aria-label=\"碰撞抵抗性 collision resistant permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>碰撞抵抗性 Collision Resistant</h4>\n<p>雜湊函數上指的碰撞就是當有兩個不同的值經過雜湊函數後會得到相同的雜湊值。碰撞在雜湊函數上是不可避免的，因為有雜湊值長度固定的特性，當輸入的值有無限種可能性，但輸出的值長度卻有限，就一定會發生碰撞。一個好的雜湊函數不是應該避免碰撞，而是要有碰撞抵抗性，什麼是碰撞抵抗性呢? 就是雖然有碰撞的發生，但我們無法用計算或推理的方式去找出哪些輸入值會造成碰撞。 這個概念就像理論上是有可能有兩個人有相同的指紋的。但我們無法光從指紋本身就推斷出是否有兩個不同的人的指紋都是長這樣，或是找出哪兩個人會有一樣的指紋。我們只能在遇到兩個人有一樣的指紋時知道，原來這兩個人有相同的指紋。</p>\n<p><img src=\"/media/cryptographic_hash_function.png\" alt=\"Source: https://en.wikipedia.org/wiki/Cryptographic_hash_function\" title=\"雜湊函數範例\"></p>\n<p>上圖為雜湊函數的範例，從圖中可以看出輸入的值不同，產出的雜湊值就會不同，且即使一句話中的只有一個字母不同，也會讓產出的雜湊值有很大的改變。(Source: <a href=\"https://en.wikipedia.org/wiki/Cryptographic_hash_function\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Wikipedia - Cryptographic Hash Function</a>)</p>\n<h3 id=\"雜湊函數的應用\" style=\"position:relative;\"><a href=\"#%E9%9B%9C%E6%B9%8A%E5%87%BD%E6%95%B8%E7%9A%84%E6%87%89%E7%94%A8\" aria-label=\"雜湊函數的應用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>雜湊函數的應用</h3>\n<p>因為有以上的那些特性，雜湊函數在資訊安全以及其他的領域上變得十分重要。計算雜湊值這個動作就很像在採集指紋及證據，可以用來證明資料是否有被竄改或是更動過，也可以用來驗證資料傳輸的過程中是否有遺漏。</p>\n<p><strong>數位簽章</strong> 中就是利用雜湊函數來確認資料有沒有被竄改，會在簽章的過程中產生資料的雜湊值，並在事後需要驗證資料時再次計算雜湊值，並比對兩個雜湊值是否相符。</p>\n<p><strong>區塊鏈</strong> 中的不可篡改特性也是利用到雜湊函數來實現，當有新的資料被加到區塊鏈的鏈上時，會需要留一個紀錄以便未來時驗證資料的正確性。當然他們可以選擇上傳資料或是檔案本身，但如果我們需要儲存在區塊鏈上的資料是一個影片檔或大型圖檔時，就換占用許多不必要的空間，因此區塊鏈的做法是一律儲存那個資料或是檔案的雜湊值，如此一來不僅能作為一個資料驗證的憑據，也可以確保每筆資料所需要的空間都是一樣的。</p>\n<p><strong>雜湊表</strong> 雜湊表則是雜湊函數的另一個應用。他是利用計算資料的雜湊值，並將雜湊值作為那筆資料儲存位置的索引，未來如果需要尋找這筆資料時只要計算它的雜湊值就可以快速找出他的儲存位置。 <br/><br/><br/> 這邊有個可以線上計算雜湊值的小工具 <a href=\"https://emn178.github.io/online-tools/md4.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://emn178.github.io/online-tools/md4.html</a> ，網頁上右邊 Hash 那列就是一些常見的雜湊函數，大家可以上去玩玩看，看你能不能找到有相同雜湊值的兩個輸入值。</p>","fields":{"slug":"/posts/2020-05-21-ep2-資安是什麼-1//posts/EP2-what-is-infosec","tagSlugs":["/tag/cia/","/tag/encryption/","/tag/hash/","/tag/digital-signature/","/tag/blockchain/","/tag/hash-table/"]},"frontmatter":{"date":"2020-05-24T23:25:00.000Z","description":"當我們在說資訊安全時，到底是指什麼呢？資安包含了哪些東西呢？資安相關的職位到底都在幹嘛呢？","tags":["CIA","encryption","hash","digital signature","blockchain","hash table"],"title":"EP2 - 什麼是資訊安全？","socialImage":"/media/ep2_cover.jpg"}}},"pageContext":{"slug":"/posts/2020-05-21-ep2-資安是什麼-1//posts/EP2-what-is-infosec"}},"staticQueryHashes":["2246977889","2727970573","911332639"],"slicesMap":{}}