{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/ep46_pretty_good_privacy/","result":{"data":{"markdownRemark":{"id":"9610bebc-4478-57a0-8e56-63c47d8711c5","html":"<h2 id=\"podcast-連結\" style=\"position:relative;\"><a href=\"#podcast-%E9%80%A3%E7%B5%90\" aria-label=\"podcast 連結 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Podcast 連結</h2>\n<ul>\n<li><a href=\"https://podcasts.apple.com/tw/podcast/%E8%B3%87%E5%AE%89%E8%A7%A3%E5%A3%93%E7%B8%AE/id1513276667#episodeGuid=ckohmxldp1sf408344yypud0g\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Apple Podcast</a></li>\n<li><a href=\"https://open.spotify.com/episode/7wAR78aZ76iczwKMohUKiM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spotify Podcast</a></li>\n<li><a href=\"https://open.firstory.me/story/ckohmxldp1sf408344yypud0g\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Firstory Podcast</a></li>\n</ul>\n<hr>\n<h3 id=\"什麼是-pgp\" style=\"position:relative;\"><a href=\"#%E4%BB%80%E9%BA%BC%E6%98%AF-pgp\" aria-label=\"什麼是 pgp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什麼是 PGP？</h3>\n<p>PGP（Pretty Good Privacy）在 1991 年由 Phil Zimmermann 開發的一款加密工具，他可以被用來加密文字、email、檔案以及用來進行數位簽章。</p>\n<p>Phil Zimmermann 希望讓所有想要可以安全的傳送訊息的人都可以有一個安全的工具來保護自己，因此開發了 PGP，並把程式跟原始碼免費提供給所有非商業用途的人。</p>\n<p>後來 Phil Zimmermann 跟幾位夥伴為了 PGP 成立了一家公司，這家公司也在接下來的幾年間被幾家不同的公司收購跟轉手，在這些過程中 PGP 變成了一套需要付費購買才能用的私人的軟體。</p>\n<p>Phil Zimmermann 跟夥伴在成立了公司不久之後就與專門制定開放標準的組織 IETF 一起推出了一套以 PGP 為基礎的標準，這套標準叫做<a href=\"https://www.openpgp.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenPGP</a>。只要是遵守這套標準，任何人都可以寫出跟 PGP 通用的軟體，換句話說就是即使 PGP 現在是一套付費的軟體，他的技術已經被公開讓大家都可以使用了。</p>\n<p>現在被最廣泛使用的一套遵守 OpenPGP 軟體是免費和開源的 <a href=\"https://gnupg.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GnuPG(簡稱 GPG)</a></p>\n<p><img src=\"/media/PGP_example.png\" alt=\"PGP_example\"></p>\n<p>圖：使用 PGP 加密的訊息</p>\n<h4 id=\"有趣的小故事\" style=\"position:relative;\"><a href=\"#%E6%9C%89%E8%B6%A3%E7%9A%84%E5%B0%8F%E6%95%85%E4%BA%8B\" aria-label=\"有趣的小故事 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>有趣的小故事</h4>\n<p>Phil Zimmermann 在 1993 年被美國政府調查，原因是根據美國出口管理法案中的定義像是 PGP 這類型的加密系統會被認為是軍用品，而 Phil Zimmermann 在網路上免費提供 PGP 的過程中，PGP 有被分享到美國以外的網站上，因此 Phil Zimmermann 可以算是非法出口軍用品。</p>\n<p>後來 Phil Zimmermann 用了一個很有趣的方式應對，他把 PGP 的原始碼完整的寫成一本書再把這本書出版並且銷售到世界各地。根據美國憲法第一修正案中規定，因為言論自由的關係，美國政府不能管制書本的出口，因此利用這種方式就可以把原本不能公開分享的 PGP 變成可以被合法出口的產品了。任何拿到這本書的人只要把書中的程式碼透過一些免費公開的軟體編譯過就可以執行了。</p>\n<h4 id=\"pgp-的應用實例\" style=\"position:relative;\"><a href=\"#pgp-%E7%9A%84%E6%87%89%E7%94%A8%E5%AF%A6%E4%BE%8B\" aria-label=\"pgp 的應用實例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PGP 的應用實例</h4>\n<p>Edward Snowden 曾經為美國的中央情報局 CIA 和國家安全局 NSA 工作過，他在 2013 年向媒體揭發了美國國安局的網路監視監聽計畫，在這之後，Snowden 就被美國和英國政府通緝，而直到今天，Snowden 仍然在俄羅斯流亡。當年 Snowden 為了確保安全性也為了避免走漏風聲，就特別跟媒體記者要求要使用一款叫做 PGP 的加密軟體。事後證明使用 PGP 保護 email，是連美國國安局都無法破解跟知道 email 內容的。</p>\n<p><img src=\"/media/pgp_edwardsnowden.png\" alt=\"PGP_edwardsnowden\"></p>\n<h3 id=\"pgp-運作原理\" style=\"position:relative;\"><a href=\"#pgp-%E9%81%8B%E4%BD%9C%E5%8E%9F%E7%90%86\" aria-label=\"pgp 運作原理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PGP 運作原理</h3>\n<blockquote>\n<p>前情提要：<a href=\"/posts/ep20_have_you_heard_of_cryptography\">密碼學</a>、<a href=\"/posts/ep21_public_key_encryption#%E5%B0%8D%E7%A8%B1%E5%BC%8F%E5%8A%A0%E5%AF%86\">對稱式加密</a>、<a href=\"/posts/ep21_public_key_encryption#%E9%9D%9E%E5%B0%8D%E7%A8%B1%E5%BC%8F%E5%8A%A0%E5%AF%86\">非對稱式加密/公開金鑰</a></p>\n</blockquote>\n<p>透過結合對稱式與非對稱式的兩種加密方法 PGP 可以做到安全性與效率。</p>\n<p>非對稱式演算法的速度通常比較慢，因此檔案大小通常比較大的訊息本體我們就交給加密速度比較快的對稱式加密。</p>\n<p>使用對稱式加密時，金鑰不知道怎麼安全的交給收件者的這個問題，就交給非對稱式加密來解決。</p>\n<p>這些過程中使用者是可以選擇要用哪一種對稱式加密跟非對稱式加密，最多人用的 GPG 就支援了超過六種不同的非對稱式加密演算法跟對稱式加密演算法。</p>\n<h4 id=\"透過-pgp-加密訊息\" style=\"position:relative;\"><a href=\"#%E9%80%8F%E9%81%8E-pgp-%E5%8A%A0%E5%AF%86%E8%A8%8A%E6%81%AF\" aria-label=\"透過 pgp 加密訊息 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>透過 PGP 加密訊息</h4>\n<p><img src=\"/media/PGP_encrypt.png\" alt=\"PGP_encrypt\"></p>\n<ol>\n<li>生成一組一次性的金鑰（用來透過對稱式加密來加密訊息）</li>\n<li>用朋友的公鑰透過非對稱式加密剛剛的一次性金鑰</li>\n<li>要將加密後的訊息、加密後的金鑰兩個一起傳給收件者</li>\n</ol>\n<h4 id=\"透過-pgp-解密訊息\" style=\"position:relative;\"><a href=\"#%E9%80%8F%E9%81%8E-pgp-%E8%A7%A3%E5%AF%86%E8%A8%8A%E6%81%AF\" aria-label=\"透過 pgp 解密訊息 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>透過 PGP 解密訊息</h4>\n<p><img src=\"/media/PGP_decrypt.png\" alt=\"PGP_decrypt\"></p>\n<ol>\n<li>收件者透過自己有的私鑰解密被加密的金鑰</li>\n<li>利用這把金鑰，透過對稱式加密的方式把被我們加密的訊息解密</li>\n</ol>\n<h4 id=\"透過-pgp-進行數位簽章\" style=\"position:relative;\"><a href=\"#%E9%80%8F%E9%81%8E-pgp-%E9%80%B2%E8%A1%8C%E6%95%B8%E4%BD%8D%E7%B0%BD%E7%AB%A0\" aria-label=\"透過 pgp 進行數位簽章 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>透過 PGP 進行數位簽章</h4>\n<blockquote>\n<p>複習：<a href=\"/posts/ep21_public_key_encryption#%E6%95%B8%E4%BD%8D%E7%B0%BD%E7%AB%A0-digital-signature\">數位簽章 Digital Signature</a></p>\n</blockquote>\n<p><img src=\"/media/pgp_digitalsignature.png\" alt=\"\"></p>\n<p>PGP 透過非對稱式加密來做到簽章</p>\n<p>假設我今天想要透過 PGP 來簽署一則要給朋友的訊息，我會把訊息用我的私鑰加密，接著把加密以後的內容連同沒有加密的訊息兩個一起寄給朋友。</p>\n<p>當朋友收到想要確認這是不是真的是我傳的訊息的時候，可以透過我的公鑰把加密的訊息解密，接著拿解密以後的內容比對他收到沒有加密的訊息。</p>\n<p>因為我的私鑰應該只有我有，因此如果可以成功用我的公鑰把訊息解密，而且解密以後的內容跟沒有加密的內容互相吻合的話，就代表這個訊息真的是我傳的。</p>\n<h4 id=\"金鑰伺服器-keyserver\" style=\"position:relative;\"><a href=\"#%E9%87%91%E9%91%B0%E4%BC%BA%E6%9C%8D%E5%99%A8-keyserver\" aria-label=\"金鑰伺服器 keyserver permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>金鑰伺服器 Keyserver</h4>\n<p>為了解決金鑰傳遞的問題，一些比較有公信力的組織架設了金鑰伺服器，這些金鑰伺服器就像一個個的資料庫，儲存了很多使用者的公開金鑰。</p>\n<p>當我們使用 PGP 的時候，可以把自己的公開金鑰和一些像是姓名、Email 等等的資料上傳到這些金鑰伺服器。</p>\n<p>如果我們要傳訊息給一個不認識的人的話，我們就可以到這些金鑰伺服器上面搜尋他的名字或是 Email，看看上面有沒有他的公開金鑰，如果有的話我們就可以用那些資訊來加密要傳送給他的訊息。</p>\n<h4 id=\"金鑰保管的問題\" style=\"position:relative;\"><a href=\"#%E9%87%91%E9%91%B0%E4%BF%9D%E7%AE%A1%E7%9A%84%E5%95%8F%E9%A1%8C\" aria-label=\"金鑰保管的問題 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>金鑰保管的問題</h4>\n<p>我們前面有提到 PGP 的加密解密和數位簽章都會用到我們的公鑰和私鑰，有時候還會用到收件者的公鑰，那麼在管理金鑰上就是很重要的一件事了。</p>\n<p>如果遺失了私鑰，我們就會沒有辦法解密任何傳送給我們的訊息，也會沒有辦法繼續進行數位簽章了。</p>\n<p>如果私鑰被駭客竊取，駭客就會有辦法解密過去我們收到的每一則訊息，而且還可以假冒我們的名義傳送訊息或是進行數位簽章。</p>\n<p>當上述的情況發生，我們都會需要產生一對新的公鑰和私鑰，並撤銷我們原本在用的金鑰。我們也會需要透過金鑰伺服器，來讓其他人知道不要再繼續使用舊的金鑰了，要改成用新的。</p>\n<p>現在的主流 Email 服務都沒有內建 PGP 的功能，這些種種的因素都讓 PGP 不是那麼容易的可以被大眾使用。</p>\n<h3 id=\"mailvelope\" style=\"position:relative;\"><a href=\"#mailvelope\" aria-label=\"mailvelope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mailvelope</h3>\n<p>一款採用 OpenPGP 標準的開放原始碼軟體，提供一般非商業的用戶免費使用。</p>\n<p>他可以透過瀏覽器擴充套件的形式跟 Gmail 整合，讓我們可以簡單地用 Gmail 來傳送被 PGP 加密或是簽署的 Email。</p>\n<p>教學連結：<a href=\"/posts/patches_how_to_use_mailvelope\">Mailvelope 使用教學</a></p>","fields":{"slug":"/posts/2021-05-09-ep46-pretty-good-privacy｜蠻好的隱私？//posts/ep46_pretty_good_privacy","tagSlugs":["/tag/pgp/","/tag/pki/","/tag/public-key/","/tag/digital-signature/"]},"frontmatter":{"date":"2021-05-09T20:24:34.019Z","description":"今天的主角是Pretty Good Privacy，先不要因為他白話到不行的名字而小看它，PGP可是能做到連國安局都無法破解的安全性！早在1991年就被開發出來的PGP到底是怎麼做到高規格的安全性、經過這麼多年還可以存活下來，而身為一般民眾又可以怎麼利用這份技術呢？","tags":["PGP","PKI","public key","digital signature"],"title":"EP46 - Pretty Good Privacy｜蠻好的隱私？","socialImage":"/media/ep46_cover.png"}}},"pageContext":{"slug":"/posts/2021-05-09-ep46-pretty-good-privacy｜蠻好的隱私？//posts/ep46_pretty_good_privacy"}},"staticQueryHashes":["2246977889","2727970573","911332639"],"slicesMap":{}}