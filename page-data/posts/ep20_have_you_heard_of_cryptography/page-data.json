{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/posts/ep20_have_you_heard_of_cryptography/","result":{"data":{"markdownRemark":{"id":"5359c183-270a-53a5-8a1a-3b5cb5b59762","html":"<h2 id=\"podcast-連結\" style=\"position:relative;\"><a href=\"#podcast-%E9%80%A3%E7%B5%90\" aria-label=\"podcast 連結 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Podcast 連結</h2>\n<ul>\n<li><a href=\"https://podcasts.apple.com/us/podcast/%E8%B3%87%E5%AE%89%E8%A7%A3%E5%A3%93%E7%B8%AE/id1513276667#episodeGuid=ckfvndfisznpw0800caru0w6g\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Apple Podcast</a></li>\n<li><a href=\"https://open.spotify.com/episode/2Z7gP5fxGwvMClbu4dY5y1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spotify Podcast</a></li>\n<li><a href=\"https://open.firstory.me/story/ckfvndfisznpw0800caru0w6g\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Firstory Podcast</a></li>\n</ul>\n<hr>\n<h2 id=\"本集內容大綱\" style=\"position:relative;\"><a href=\"#%E6%9C%AC%E9%9B%86%E5%85%A7%E5%AE%B9%E5%A4%A7%E7%B6%B1\" aria-label=\"本集內容大綱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>本集內容大綱</h2>\n<h3 id=\"前情提要\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E6%83%85%E6%8F%90%E8%A6%81\" aria-label=\"前情提要 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前情提要</h3>\n<p>密碼學所討論的密碼和 <a href=\"/posts//EP3%20-%20%E8%A8%AD%E5%AE%9A%E5%AF%86%E7%A2%BC%E5%A5%BD%E8%A4%87%E9%9B%9C%EF%BC%81\">EP3 - 設定密碼好複雜！</a>中提到的用來驗證身份的密碼不同。</p>\n<ul>\n<li>驗證身份的密碼：Password，使用者在登入時輸入已證明身份的密碼，安全性主要依賴密碼本身的長度和複雜度</li>\n<li>密碼學所討論的密碼：Key 金鑰，用來加密和解密用的，長度通常較長，安全性除了依賴密碼的長度外，也大大取決於加密演算法。</li>\n</ul>\n<h3 id=\"密碼學\" style=\"position:relative;\"><a href=\"#%E5%AF%86%E7%A2%BC%E5%AD%B8\" aria-label=\"密碼學 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>密碼學</h3>\n<p><strong>概念：</strong> 把一些資訊透過特定方式隱藏，讓這些資訊無法輕易的被外人解讀。<br>\n<strong>歷史：</strong></p>\n<ul>\n<li>500BC：斯巴達在打仗時不希望作戰計劃暴露給敵人，就在一條很長的紙上寫了一串字母，如果想讀取訊息，就要把紙條纏在一個特定大小的棍子上，才能拼出有意義的句子。 如下圖</li>\n</ul>\n<p><img src=\"/media/cryptography_sparta.png\" alt=\"\"></p>\n<p>Source: <a href=\"https://commons.wikimedia.org/wiki/File:Skytale.png\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Wikipedia by Luringen</a> licensed under CC BY-SA 3.0</p>\n<ul>\n<li>490BC：古希臘人會將機密訊息刺在奴隸頭上，頭髮長出來時機密的訊息就會被蓋住，如果要看訊息再把奴隸的頭髮剃掉。</li>\n<li>15 世紀：李奧納多•達文西的部分手稿就是利用鏡像文字左右相反的特性書寫，解讀時也就需要透過鏡子才能解讀。下圖為達文西的手稿</li>\n</ul>\n<p><img src=\"/media/cryptography_davinci.jpg\" alt=\"\"></p>\n<p>Source: <a href=\"https://commons.wikimedia.org/wiki/File:Da_Vinci_mirror_writing.jpg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Wikipedia</a> by <a href=\"https://Lucnix.be\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Luc Viatour</a> licensed under Public Domain</p>\n<ul>\n<li>現代：PTT 看到的藏頭詩</li>\n</ul>\n<p><img src=\"/media/cryptography_stenography.jpg\" alt=\"\"></p>\n<p>Source: PTT [Re: [求助]求高手藏頭詩 by wei998 (黑)](<a href=\"https://www.ptt.cc/bbs/Boy-Girl/M.1514541343.A.BE5.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.ptt.cc/bbs/Boy-Girl/M.1514541343.A.BE5.html</a>)</p>\n<p>這些依靠物理工具來達成的加密方法，雖然只能算是密碼學的皮毛，只是將資料很簡單的隱藏起來而已，並沒有將資料變得無法辨識，破解上並不需要花費太多力氣。</p>\n<h3 id=\"加密演算法\" style=\"position:relative;\"><a href=\"#%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95\" aria-label=\"加密演算法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>加密演算法</h3>\n<p>過一個金鑰和一些數學公式，讓原本的資料變得無法辨識，這樣即使資料被駭客取得了，也無法知道原本的內容是什麼，要復原的話就只能使用加密時使用的金鑰配合對應的數學公式解密。 元素：</p>\n<ul>\n<li>明文：想保護而還沒加密的資料</li>\n<li>密文：加密後無法辨識的資料</li>\n<li>演算法：將資料加密或解密的方法</li>\n<li>金鑰：與演算法配合，讓密文無法被他人解密的關鍵</li>\n</ul>\n<p><img src=\"/media/cryptography_explain.jpg\" alt=\"\"></p>\n<h3 id=\"混淆-confusion--擴散-diffusion\" style=\"position:relative;\"><a href=\"#%E6%B7%B7%E6%B7%86-confusion--%E6%93%B4%E6%95%A3-diffusion\" aria-label=\"混淆 confusion  擴散 diffusion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>混淆 Confusion ＆ 擴散 Diffusion</h3>\n<p>加密演算法主要會希望達到這兩個目的，做到這兩底才能確保密文在公開的情況下，攻擊者也無法知道我們使用的金鑰和明文。</p>\n<ul>\n<li>混淆 Confusion：減少密文和金鑰間的關聯性，讓別人無法直接或間接地從密文中推敲出使用的金鑰、破解密文。</li>\n<li>擴散 Diffusion：減少明文和密文間的關聯性，也就是說當明文中一個字母被更改，密文也應該要大幅度的改變，而不是也跟著只改變一個字母，才能避免攻擊者透過分析密文的變化進而找出規律推敲出明文。</li>\n</ul>\n<h3 id=\"替換式密碼-substitution-cipher\" style=\"position:relative;\"><a href=\"#%E6%9B%BF%E6%8F%9B%E5%BC%8F%E5%AF%86%E7%A2%BC-substitution-cipher\" aria-label=\"替換式密碼 substitution cipher permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>替換式密碼 Substitution Cipher</h3>\n<p>加密演算法的兩種基礎加密方式的其中之一。<br>\n將明文中的每個字母替換成其他東西，讓明文看起來像是無意義的亂碼</p>\n<ul>\n<li>\n<p>Ａ換成Ｂ，Ｂ換成Ｃ ⋯ Ｚ換成Ａ（金鑰為 1）</p>\n<ul>\n<li>APPLE → BQQMF</li>\n</ul>\n</li>\n<li>\n<p>Ａ換成Ｃ，Ｂ換成Ｄ ⋯ Ｚ換成Ｂ（金鑰為 2）</p>\n<ul>\n<li>APPLE → CRRNG</li>\n</ul>\n</li>\n<li>\n<p>Ａ換成Ｚ，Ｂ換成Ａ ⋯ Ｚ換成Ｙ（金鑰為 25）</p>\n<ul>\n<li>APPLE → ZOOKD</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"豬圈密碼共季會密碼-pigpen-cipher\" style=\"position:relative;\"><a href=\"#%E8%B1%AC%E5%9C%88%E5%AF%86%E7%A2%BC%E5%85%B1%E5%AD%A3%E6%9C%83%E5%AF%86%E7%A2%BC-pigpen-cipher\" aria-label=\"豬圈密碼共季會密碼 pigpen cipher permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>豬圈密碼/共季會密碼 Pigpen Cipher</h4>\n<p><img src=\"/media/cryptography_pigpen.jpg\" alt=\"\"></p>\n<p><img src=\"/media/cryptography_pigpen_example.jpg\" alt=\"\"></p>\n<h4 id=\"破解方式\" style=\"position:relative;\"><a href=\"#%E7%A0%B4%E8%A7%A3%E6%96%B9%E5%BC%8F\" aria-label=\"破解方式 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>破解方式</h4>\n<p>分析每個字母出現的次數<br>\n在英文中，雖然有 26 個字母，但不是每個字母都會很平均的出現在句子和文章中，像母音的ＡＥＩＯＵ出現的機率就很高，相對的Ｘ、Ｚ等字母出現機率就很低。<br>\n出現的機率是最高的是Ｅ(13%)，遠高於平均的 3%。出現機率最低的則是Ｚ(0.074%)。 <a href=\"https://en.wikipedia.org/wiki/Letter_frequency\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Wikipedia - Alphabet Frequency</a></p>\n<p>透過這種特性，只要去統計加密後的密文中各個字母或符號出現的機率，再拿他去比對英文中各個字母出現的機率，就可以推敲出加密前的明文了。</p>\n<h3 id=\"換位式密碼-transposition-cipher\" style=\"position:relative;\"><a href=\"#%E6%8F%9B%E4%BD%8D%E5%BC%8F%E5%AF%86%E7%A2%BC-transposition-cipher\" aria-label=\"換位式密碼 transposition cipher permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>換位式密碼 Transposition Cipher</h3>\n<p>加密演算法的兩種基礎加密方式的其中之二。<br>\n這個做法不會更改資料本身，但會依照規律改變資料的排列順序。</p>\n<ul>\n<li>\n<p>將奇數為字母拿到最前面，偶數為字母拿到後面</p>\n<ul>\n<li>HELLO → HLOEL （順序從 12345 → 13524）</li>\n</ul>\n</li>\n<li>\n<p>用金鑰的字母順序作為每列換位的順序</p>\n</li>\n</ul>\n<p><img src=\"/media/cryptography_transposition.jpg\" alt=\"\"></p>\n<h3 id=\"進階的加密演算法\" style=\"position:relative;\"><a href=\"#%E9%80%B2%E9%9A%8E%E7%9A%84%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95\" aria-label=\"進階的加密演算法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>進階的加密演算法</h3>\n<p>替換式密碼和換位密碼單獨來看都很基本，實際應用上在安全性也不是很足夠，但兩者都是密碼學上很重要的基礎，很多安全的加密演算法都是由不同種類的替換式密碼和換位密碼組合而成。<br>\n美國聯邦政府在 1976 年列為資料處理標準的加密演算法 DES（資料加密標準 Data Encryption Standard）就是結合了好幾種替換式密碼和換位密碼所組成的。<br>\nDES 中使用了一組 56 位元的金鑰將資料進行 16 輪的替換和換位來讓演算法夠安全。<br>\nDES 已經在 1997 年被破解了，現在取代 DES 的是進階加密標準 AES。</p>\n<p>DES 的筆記會放在<a href=\"#des-%E8%B3%87%E6%96%99%E5%8A%A0%E5%AF%86%E6%A8%99%E6%BA%96-data-encryption-standard-%E5%8E%9F%E7%90%86\">本篇文章的最後</a>供大家參考。</p>\n<h3 id=\"加密演算法的安全性\" style=\"position:relative;\"><a href=\"#%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95%E7%9A%84%E5%AE%89%E5%85%A8%E6%80%A7\" aria-label=\"加密演算法的安全性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>加密演算法的安全性</h3>\n<h4 id=\"考慮不同的情境\" style=\"position:relative;\"><a href=\"#%E8%80%83%E6%85%AE%E4%B8%8D%E5%90%8C%E7%9A%84%E6%83%85%E5%A2%83\" aria-label=\"考慮不同的情境 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>考慮不同的情境</h4>\n<ul>\n<li>攻擊者只知道密文</li>\n<li>攻擊者知道明文</li>\n<li>攻擊者猜的到明文</li>\n<li>攻擊者可以自由選擇明文</li>\n<li>攻擊者可以自由選擇密文</li>\n</ul>\n<p><strong>如果攻擊者都已經知道明文了，加密方法安全性還需要考慮嗎？</strong></p>\n<p>加密演算法跟金鑰通常都不會只使用一次，當我們跟同一個對象在傳遞訊息時往往會重複使用同一組金鑰。 攻擊者知道明文的情況，可能就會發生在攻擊者獲取了對話中某些未加密的片段，如果攻擊者在這種情況下可以破解所使用的加密演算法和金鑰的話，就能破解過去和未來所傳遞的所有訊息。<br>\n所以最理想的情況是不管攻擊者知道多少訊息，只要不知道金鑰，都不能破解訊息，這樣才會認定這個加密方法是夠安全的。</p>\n<h4 id=\"抵禦暴力破解法\" style=\"position:relative;\"><a href=\"#%E6%8A%B5%E7%A6%A6%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E6%B3%95\" aria-label=\"抵禦暴力破解法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>抵禦暴力破解法</h4>\n<blockquote>\n<p>複習：什麼是<a href=\"/posts/ep3-why-does-password-has-to-be-so-complicated/#%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E6%B3%95-brute-force-attack\">暴力破解法？</a></p>\n</blockquote>\n<p><strong>以破解 DES 為例</strong></p>\n<p>DES 使用的是 56 位元的金鑰，每一位元可能是 1 或是 0 ，因此金鑰的可能性有 2 的 56 次方，也就是 7 千兆。<br>\n理論上如果我們使用一台蘋果的 Macbook Pro 來進行破解的話只要花 185 天就可以破解了，同時使用多台電腦或是用一些專門設計來破解用的電腦的話時間就會大幅縮短。 假設的條件和計算式：</p>\n<ul>\n<li>假設在 500MHz 的情況下，每個時脈週期可以進行一次解密</li>\n<li>確認一組金鑰所需要的時間：1/(500 x 10^6)秒</li>\n<li>Macbook Pro 處理器最高可達 4.5GHz</li>\n<li>要確認 2^56 組密碼鎖需要花的時間：2^56/(4500 x 10^6)秒 = 185 天 (<a href=\"https://www.wolframalpha.com/input/?i=%282%5E56%29%2F%284500*60*60*24*10%5E6%29\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">計算</a>)</li>\n</ul>\n<p>但如果是在相同的情況下要破解取代 DES，使用標準 256 位元金鑰的進階加密標準 AES 的話，需要的時間就會是 8x10^59 年（<a href=\"https://www.wolframalpha.com/input/?i=%282%5E56%29%2F%284500*60*60*24*365*10%5E6%29\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">計算</a>），簡單來說就是不可能被暴力破解。</p>\n<p>在 DES 被發明的 1976 年，那時個人電腦還沒普及，每台電腦的效能也很差，因此在當時 DES 是一個安全的選擇，但拿到 44 年後的現在，因為科技的進步，電腦效能已經比以前好太多了，因此在現今科技底下 DES 是不夠安全的。</p>\n<p>相同的道理也適用其他所有的加密演算法上，現在是安全的加密方法也會因為未來科技的進步，而變得能在短時間內被暴力破解法破解。</p>\n<h4 id=\"加密法是否被正確實踐\" style=\"position:relative;\"><a href=\"#%E5%8A%A0%E5%AF%86%E6%B3%95%E6%98%AF%E5%90%A6%E8%A2%AB%E6%AD%A3%E7%A2%BA%E5%AF%A6%E8%B8%90\" aria-label=\"加密法是否被正確實踐 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>加密法是否被正確實踐</h4>\n<p>加密演算法安不安全還有一個很重要的點就是，我們是不是有正確的將他透過程式實現出來。<br>\n很多時候一個加密演算法本身以及他背後的數學原理是十分安全的，但程式設計師在將這個演算法轉換為軟體中可以運行的程式時會有邏輯上的瑕疵或是漏洞，導致這個加密方法無法被安全的實現。<br>\n我研究所時的密碼學教授就告訴我們永遠不要自己寫自己的加密演算法，因為自己寫的加密演算法一定都會多少有一點問題或是漏洞。<br>\n現在主流使用的加密演算法函式庫都是經過許多密碼學博士或是專家的測試和檢驗才確保安全的。</p>\n<blockquote>\n<p>密碼學是一個很重要的工具，但密碼學也不是萬靈丹，在資安領域中除了有密碼學來幫我們加密資料以外也需要很多其他的工具的輔助。</p>\n</blockquote>\n<h2 id=\"加密解密小測驗\" style=\"position:relative;\"><a href=\"#%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E5%B0%8F%E6%B8%AC%E9%A9%97\" aria-label=\"加密解密小測驗 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>加密解密小測驗</h2>\n<p><strong>題目一：</strong> 找出下圖透過豬圈密碼所加密的訊息</p>\n<p><img src=\"/media/cryptography_question_pigpen.jpg\" alt=\"\"></p>\n<p><strong>題目二：</strong> 找出以下透過換位式密碼加密的訊息 <br>\n金鑰：INFOSEC <br>\n密文：NRPPOCO NEICHCK</p>\n<p>答案會在本文的最後</p>\n<h2 id=\"des-資料加密標準-data-encryption-standard-原理\" style=\"position:relative;\"><a href=\"#des-%E8%B3%87%E6%96%99%E5%8A%A0%E5%AF%86%E6%A8%99%E6%BA%96-data-encryption-standard-%E5%8E%9F%E7%90%86\" aria-label=\"des 資料加密標準 data encryption standard 原理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DES 資料加密標準 Data Encryption Standard 原理</h2>\n<p><img src=\"/media/cryptography_des.png\" alt=\"\"></p>\n<h2 id=\"加密解密小測驗---解答\" style=\"position:relative;\"><a href=\"#%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E5%B0%8F%E6%B8%AC%E9%A9%97---%E8%A7%A3%E7%AD%94\" aria-label=\"加密解密小測驗   解答 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>加密解密小測驗 - 解答</h2>\n<p>題目一解答：Security is Important</p>\n<p>題目二解答：Popcorn Chicken （PS. Popcorn Chicken 是鹽酥雞的英文）</p>","fields":{"slug":"/posts/2020-10-04-ep20-你有聽過密碼學嗎？//posts/ep20_have_you_heard_of_cryptography","tagSlugs":["/tag/cryptography/","/tag/des/","/tag/confusion/","/tag/diffusion/"]},"frontmatter":{"date":"2020-10-04T22:00:09.505Z","description":"密碼學其實是一個很多人會不小心接觸到的東西，PTT上的藏頭詩和小學生之間的紙條和交換日記都可以算在這個範疇之內，但實際上密碼學是一個更深的學問，也是保護資訊安全很重要的核心技術。","tags":["cryptography","DES","confusion","diffusion"],"title":"EP20 - 你有聽過密碼學嗎？","socialImage":"/media/ep20_cover.png"}}},"pageContext":{"slug":"/posts/2020-10-04-ep20-你有聽過密碼學嗎？//posts/ep20_have_you_heard_of_cryptography"}},"staticQueryHashes":["2246977889","2727970573","911332639"],"slicesMap":{}}